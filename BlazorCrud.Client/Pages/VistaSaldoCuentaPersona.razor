@page "/VistaSaldoCuentaPersona"

<h3>Estado de cuenta por persona</h3>

<div class="mb-3">
    <label class="form-label">Buscar por Nombre de Persona:</label>
    <InputText class="form-control" @bind-Value="nombrePersonaBusqueda"></InputText>
    <button class="btn btn-primary mt-2" @onclick="BuscarSaldoCuenta">Buscar</button>
</div>

@if (saldoPersona != null)
{
    <h4>Información de la Cuenta</h4>
    <ul>
        <li><strong>Nombre:</strong> @saldoPersona.Nombre</li>
        <li><strong>Estado de la Cuenta:</strong> @saldoPersona.StatusCuenta</li>
        <li><strong>Tipo de Saldo:</strong> @saldoPersona.TipoSaldoCuenta</li>
        <li><strong>Saldo Anterior:</strong> @saldoPersona.SaldoAnterior</li>
        <li><strong>Débitos:</strong> @saldoPersona.Debitos</li>
        <li><strong>Créditos:</strong> @saldoPersona.Creditos</li>
        <li><strong>Saldo Actual:</strong> @saldoPersona.SaldoActual</li>
    </ul>

    <h4>Movimientos del Mes</h4>
    @if (movimientosPersona.Any())
    {
        <table class="table">
            <thead>
                <tr>
                    <th>Fecha del Movimiento</th>
                    <th>Tipo de Movimiento</th>
                    <th>Valor del Movimiento</th>
                    <th>Descripción</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var mov in movimientosPersona)
                {
                    <tr>
                        <td>@mov.FechaCreacion.ToShortDateString()</td>
                        <td>@mov.TipoMovimiento</td>
                        <td>@mov.ValorMovimiento</td>
                        <td>@mov.Descripcion</td>
                    </tr>
                }
            </tbody>
        </table>
    }
    else
    {
        <p class="text-center">No hubo movimientos para esta persona en el mes.</p>
    }
}
else if (busquedaRealizada)
{
    <p class="text-danger">No se encontraron registros para el nombre de la persona ingresada o no tiene saldo.</p>
}

@code {
    private string nombrePersonaBusqueda;
    private Cuenta saldoPersona;
    private List<Movimiento> movimientosPersona = new List<Movimiento>();
    private bool busquedaRealizada = false;


    private List<Cuenta> cuentas = new List<Cuenta>
    {
        new Cuenta
        {
            Nombre = "Ernesto Arturo",
            StatusCuenta = "Cuenta Activa",
            TipoSaldoCuenta = "Préstamo Personal",
            SaldoAnterior = 750.00m,
            Debitos = 1000.00m,
            Creditos = 500.00m,
            SaldoActual = 1250.00m,
            Movimientos = new List<Movimiento>
            {
                new Movimiento
                {
                    FechaCreacion = DateTime.Parse("2024-10-12"),
                    TipoMovimiento = "Depósito",
                    ValorMovimiento = 500.00m,
                    Descripcion = "Depósito en cuenta"
                },
                new Movimiento
                {
                    FechaCreacion = DateTime.Parse("2024-10-10"),
                    TipoMovimiento = "Retiro",
                    ValorMovimiento = 1000.00m,
                    Descripcion = "Retiro en cajero"
                },
                new Movimiento
                {
                    FechaCreacion = DateTime.Parse("2024-10-15"),
                    TipoMovimiento = "Consumo",
                    ValorMovimiento = 150.00m,
                    Descripcion = "Pago factura"
                }
            }
        },
        new Cuenta
        {
            Nombre = "Martina Isadora",
            StatusCuenta = "Cuenta Activa",
            TipoSaldoCuenta = "Préstamo Personal",
            SaldoAnterior = 500.00m,
            Debitos = 300.00m,
            Creditos = 200.00m,
            SaldoActual = 400.00m,
            Movimientos = new List<Movimiento>
            {
                new Movimiento
                {
                    FechaCreacion = DateTime.Parse("2024-10-08"),
                    TipoMovimiento = "Pago",
                    ValorMovimiento = 300.00m,
                    Descripcion = "Pago en tienda"
                },
                new Movimiento
                {
                    FechaCreacion = DateTime.Parse("2024-10-05"),
                    TipoMovimiento = "Depósito",
                    ValorMovimiento = 200.00m,
                    Descripcion = "Depósito en cuenta"
                }

            }
        }
    };

    private void BuscarSaldoCuenta()
    {
        busquedaRealizada = true;
        saldoPersona = cuentas.FirstOrDefault(c => c.Nombre.Contains(nombrePersonaBusqueda, StringComparison.OrdinalIgnoreCase));
        if (saldoPersona != null)
        {
            movimientosPersona = saldoPersona.Movimientos.ToList();
        }
        else
        {
            movimientosPersona.Clear();
        }
    }


    public class Cuenta
    {
        public string Nombre { get; set; }
        public string StatusCuenta { get; set; }
        public string TipoSaldoCuenta { get; set; }
        public decimal SaldoAnterior { get; set; }
        public decimal Debitos { get; set; }
        public decimal Creditos { get; set; }
        public decimal SaldoActual { get; set; }
        public List<Movimiento> Movimientos { get; set; }
    }

    public class Movimiento
    {
        public DateTime FechaCreacion { get; set; }
        public string TipoMovimiento { get; set; }
        public decimal ValorMovimiento { get; set; }
        public string Descripcion { get; set; }
    }
}