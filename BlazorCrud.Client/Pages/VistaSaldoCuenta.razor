@page "/SaldoCuentas"

@using BlazorCrud.Shared
@using CurrieTechnologies.Razor.SweetAlert2
@using BlazorCrud.Client.Services

@inject SweetAlertService Swall
@inject ISaldoCuenta saldoService
@inject HttpClient Http
@using Microsoft.AspNetCore.Authorization;
@inject NavigationManager navigation

<h3>Saldo de Cuentas</h3>

<a class="btn btn-success btn-sm mb-3" href="FormularioCuenta">Nueva Cuenta</a>

<table class="table">
    <thead>
        <tr>
            <th>Persona</th>
            <th>Estado Cuenta</th>
            <th>Tipo Saldo Cuenta</th>
            <th>Saldo Anterior</th>
            <th>Debitos</th>
            <th>Creditos</th>
            <th>Saldo Actual</th>
            <th>Fecha Creación</th>
            <th>Usuario Creación</th>
            <th>Fecha Modificación</th>
            <th>Usuario Modificación</th>
        </tr>
    </thead>
    <tbody>
        @if (listaSaldo == null)
        {
            <tr>
                <td colspan="13" align="center">
                    <svg xmlns="http://www.w3.org/2000/svg" width="50" height="50" fill="currentColor" class="bi bi-cloud-arrow-down-fill" viewBox="0 0 16 16">
                        <path d="M8 2a5.53 5.53 0 0 0-3.594 1.342c-.766.66-1.321 1.52-1.464 2.383C1.266 6.095 0 7.555 0 9.318 0 11.366 1.708 13 3.781 13h8.906C14.502 13 16 11.57 16 9.773c0-1.636-1.242-2.969-2.834-3.194C12.923 3.999 10.69 2 8 2m2.354 6.854-2 2a.5.5 0 0 1-.708 0l-2-2a.5.5 0 1 1 .708-.708L7.5 9.293V5.5a.5.5 0 0 1 1 0v3.793l1.146-1.147a.5.5 0 0 1 .708.708" />
                    </svg>
                </td>
            </tr>
        }
        else
        {
            @foreach (var saldo in listaSaldo)
            {
                <tr>
                    <td>@saldo.Persona!.Nombre</td>
                   <td>@saldo.StatusCuentum!.Nombre</td>
                    <td>@saldo.TipoSaldoCuenta!.Nombre</td> 
                    <td>@saldo.SaldoAnterior</td>
                    <td>@saldo.Debitos</td>
                    <td>@saldo.Creditos</td>
                    <td>@saldo.SaldoActual</td>
                    <td>@saldo.FechaCreacion.ToShortDateString()</td>
                    <td>@saldo.UsuarioCreacion</td>
                    <td>@(saldo.FechaModificacion.HasValue ? saldo.FechaModificacion.Value.ToShortDateString() : DateTime.Now.ToShortDateString())</td>
                    <td>@saldo.UsuarioModificacion</td>
                </tr>
            }
        }
    </tbody>
</table>

@if (mostrarModal)
{
    <div class="modal fade show d-block" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-modal="true">
        <div class="modal-dialog modal-dialog-centered" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Detalles de la cuenta</h5>
                    <button type="button" class="btn-close" aria-label="Close" @onclick="CerrarModal"></button>
                </div>
                <div class="modal-body">

                    <p><strong>Persona:</strong> @saldoSeleccionado!.Persona!.Nombre</p>
                    <p><strong>Estatus Cuenta:</strong> @saldoSeleccionado!.StatusCuentum!.Nombre</p>
                    <p><strong>Tipo Saldo Cuenta:</strong> @saldoSeleccionado!.TipoSaldoCuenta!.Nombre</p>
                    <p><strong>Saldo Anterior:</strong> @saldoSeleccionado!.SaldoAnterior</p>
                    <p><strong>Debitos:</strong> @saldoSeleccionado!.Debitos</p>
                    <p><strong>Creditos:</strong> @saldoSeleccionado!.Creditos</p>
                    <p><strong>Saldo Actual:</strong> @saldoSeleccionado.SaldoActual</p>
                    <p><strong>Fecha Creacion:</strong> @saldoSeleccionado!.FechaCreacion</p>
                    <p><strong>Usuario Creacion:</strong> @saldoSeleccionado.UsuarioCreacion</p>
                    <p><strong>Fecha Modificación:</strong> @(saldoSeleccionado.FechaModificacion.HasValue ? saldoSeleccionado.FechaModificacion.Value.ToShortDateString() : "-")</p>
                    <p><strong>Usuario Modificación:</strong> @(string.IsNullOrEmpty(saldoSeleccionado.UsuarioModificacion) ? "-" : saldoSeleccionado.UsuarioModificacion)</p>
 
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" @onclick="CerrarModal">Cerrar</button>
                </div>
            </div>
        </div>
    </div>
}






@code {
    private List<SaldoCuentumSC> listaSaldo;
    private SaldoCuentumSC saldoSeleccionado;
    private bool mostrarModal = false;

    protected override async Task OnInitializedAsync()
    {
        listaSaldo = await saldoService.Lista();
    }

    private void MostrarDetalles(SaldoCuentumSC saldo)
    {
        saldoSeleccionado = saldo;
        mostrarModal = true;
    }

    private void CerrarModal()
    {
        mostrarModal = false;
    }
}
